name: Fetch ICON-RUC GRIB2 and Generate PNGs (Test)

on:
  workflow_dispatch:

jobs:
  fetch_generate_and_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          lfs: true
          token: ${{ secrets.GH_PAT }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set RUN and DATE (fixed)
        id: set_run_date
        run: |
          DATE="2025-10-05"
          RUN="22"
          echo "RUN=$RUN" >> $GITHUB_ENV
          echo "DATE=$DATE" >> $GITHUB_ENV

      - name: Download t2m GRIB2 files (Test)
        run: |
          mkdir -p data/t2m
          cd data/t2m
          seq 0 2 | xargs -n 1 -P 2 -I{} bash -c '
            i_padded=$(printf "%03d" {} )
            URL="https://opendata.dwd.de/weather/nwp/v1/m/icon-d2-ruc/p/T_2M/r/${DATE}T${RUN}:00/s/PT${i_padded}H00M.grib2"
            wget -O t2m_${i_padded}.grib2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
          '

      - name: Download ww GRIB2 files (Test)
        run: |
          mkdir -p data/ww
          cd data/ww
          seq 1 3 | xargs -n 1 -P 2 -I{} bash -c '
            i_padded=$(printf "%03d" {} )
            URL="https://opendata.dwd.de/weather/nwp/v1/m/icon-d2-ruc/p/WW/r/${DATE}T${RUN}:00/s/PT${i_padded}H00M.grib2"
            wget -O ww_${i_padded}.grib2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
          '

      - name: Download tp GRIB2 files (Test)
        run: |
          mkdir -p data/tp
          cd data/tp
          seq 0 2 | xargs -n 1 -P 2 -I{} bash -c '
            i_padded=$(printf "%03d" {} )
            URL="https://opendata.dwd.de/weather/nwp/v1/m/icon-d2-ruc/p/TOT_PREC_D/r/${DATE}T${RUN}:00/s/PT${i_padded}H00M.grib2"
            wget -O tot_prec_${i_padded}.grib2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
          '

      - name: Generate PNGs (Test)
        run: |
          mkdir -p iconruc/${RUN}/t2m
          mkdir -p iconruc/${RUN}/ww
          mkdir -p iconruc/${RUN}/tp

          python scripts/generate_pngs.py data/t2m iconruc/${RUN}/t2m t2m
          python scripts/generate_pngs.py data/ww iconruc/${RUN}/ww ww
          python scripts/generate_pngs.py data/tp iconruc/${RUN}/tp tp

      - name: Generate metadata.json (Test)
        run: |
          DATE_PART="${DATE}"
          RUN_PART="${RUN}"

          RUN_TIME="$(date -u -d "${DATE_PART} ${RUN_PART}:00:00" +"%Y-%m-%dT%H:%M:%SZ")"

          generate_timestamps() {
            STEP_COUNT=$1
            BASE_DATE="$2"
            BASE_HOUR="$3"
            TS="["
            for i in $(seq 0 $STEP_COUNT); do
              TS+='"'$(date -u -d "${BASE_DATE} ${BASE_HOUR}:00:00 +${i} hour" +"%Y-%m-%dT%H:%M:%SZ")'"'
              if [ $i -ne $STEP_COUNT ]; then
                TS+=", "
              fi
            done
            TS+="]"
            echo "$TS"
          }

          # normale Parameter starten bei RUN
          T2M_TIMESTAMPS=$(generate_timestamps 2 "$DATE_PART" "$RUN_PART")
          TP_TIMESTAMPS=$(generate_timestamps 2 "$DATE_PART" "$RUN_PART")

          # WW startet bei RUN + 3h
          WW_TIMESTAMPS=$(generate_timestamps 2 "$DATE_PART" "$((10#$RUN_PART + 3))")

          cat > iconruc/${RUN}/metadata.json << EOF
{
  "latest_run": "$DATE_PART"_"$RUN_PART",
  "run_time": "$RUN_TIME",
  "available_params": ["t2m", "ww", "tp"],
  "timesteps": {
    "t2m": $T2M_TIMESTAMPS,
    "ww": $WW_TIMESTAMPS,
    "tp": $TP_TIMESTAMPS
  }
}
EOF

      - name: Delete GRIB2 files
        run: rm -rf data/

      - name: Commit and push generated PNGs + metadata.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add iconruc/${RUN}
          git commit -m "Test ICON-RUC PNGs + metadata.json for run ${RUN}" || echo "No changes to commit"
          git push origin HEAD:main
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
